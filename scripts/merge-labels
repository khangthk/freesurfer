#!/usr/bin/env tcsh -f

#
# merge-labels
#
#
#
# Copyright Â© 2021 The General Hospital Corporation (Boston, MA) "MGH"
#
# Terms and conditions for use, reproduction, distribution and contribution
# are found in the 'FreeSurfer Software License Agreement' contained
# in the file 'LICENSE' found in the FreeSurfer distribution, and here:
#
# https://surfer.nmr.mgh.harvard.edu/fswiki/FreeSurferSoftwareLicense
#
# Reporting: freesurfer@nmr.mgh.harvard.edu
#
#

# merge-labels

set labellist = ();
set outlabel = ();

set VERSION = 'merge-labels @FS_VERSION@';
set inputargs = ($argv);
set PrintHelp = 0;

if($#argv == 0) goto usage_exit;
set n = `echo $argv | egrep -e -help | wc -l`
if($n != 0) then
  set PrintHelp = 1;
  goto usage_exit;
endif
set n = `echo $argv | egrep -e -version | wc -l`
if($n != 0) then
  echo $VERSION
  exit 0;
endif

set PWD = `getpwdcmd`;
if($status) exit 1;

source $FREESURFER_HOME/sources.csh

goto parse_args;
parse_args_return:

goto check_params;
check_params_return:

set outdir = `dirname $outlabel`;
mkdir -p $outdir

set line1 = `head -n 1 $labellist[1]`;

set tmpfile = `fs_temp_file --suffix .label`
rm -f $tmpfile
foreach labelfile ($labellist)
  cat $labelfile | tail -n +3  >> $tmpfile
end

cat $tmpfile | sort | uniq > $tmpfile.2
set n = `cat $tmpfile.2 | wc -l `;
#echo $n

rm -f $outlabel

echo $line1 >> $outlabel
echo $n >> $outlabel
cat $tmpfile.2 >> $outlabel

#echo "$tmpfile $tmpfile.2"
rm -f $tmpfile $tmpfile.2

#echo "merge-labels done"

exit 0

###############################################

############--------------##################
parse_args:
set cmdline = ($argv);
while( $#argv != 0 )

  set flag = $argv[1]; shift;

  switch($flag)

    case "-i":
      if ( $#argv == 0) goto arg1err;
      set labelfile = $argv[1]; shift;
      if(! -e $labelfile) then
        echo "ERROR: cannot find $labelfile"
        exit 1;
      endif
      set labellist = ($labellist $labelfile);
      breaksw

    case "-o":
      if ( $#argv == 0) goto arg1err;
      set outlabel = $argv[1]; shift;
      breaksw

    case "-debug":
      set verbose = 1;
      set echo = 1;
      breaksw

    case "-umask":
      if ( $#argv == 0) goto arg1err;
      umask $1; shift;
      breaksw

    default:
      echo ERROR: Flag $flag unrecognized.
      echo $cmdline
      exit 1
      breaksw
  endsw

end

goto parse_args_return;
############--------------##################

############--------------##################
check_params:

if($#labellist <= 1) then
  echo "ERROR: need at least two input labels"
  exit 1;
endif

if($#outlabel == 0) then
  echo "ERROR: no output label specified"
  exit 1;
endif

goto check_params_return;
############--------------##################

############--------------##################
arg1err:
  echo "ERROR: flag $flag requires one argument"
  exit 1
############--------------##################

############--------------##################
usage_exit:
  echo ""
  echo "USAGE: merge-labels"
  echo ""
  echo "  -i labelfile <-i lablefile ...>"
  echo "  -o outlabelfile"
  echo ""
  echo "  -help"
  echo ""

  if(! $PrintHelp) exit 1;

  echo $VERSION

  cat $0 | awk 'BEGIN{prt=0}{if(prt) print $0; if($1 == "BEGINHELP") prt = 1 }'

exit 1;


#---- Everything below here is printed out as part of help -----#
BEGINHELP

This will merge several labels together. It will make sure that no
vertex is represented more than once.







exit 0
